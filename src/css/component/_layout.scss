/**
  px값 List를 만들어주는 함수입니다.
*/
@function size($start, $end) {
  $size : ();
  @for $i from $start through $end {
      $value : $i + 0;
      $size : append($size, $value);
  }
  @return $size;
}

/**
값이 0일때는 0으로, 그 외에는 'px'을 붙여줍니다.
ex) 0 => 0, 10 => 10px
*/
@function getPx($value) {
  @if $value == 0 {
      @return $value;
  } @else {
      @return $value + 0px;
  }
}

/** 
px 값입니다.
0 ~ 100px 까지 조정하게 만들었습니다.
*/
$size : size(0, 100);

/**
margin과 padding의 각 위치를 지정해주는 map 입니다.
key는 class이름 생성시 쓰이며 value는 상세 속성 정의시 쓰입니다.
*/
$position : ('l':'left', 'r':'right', 't':'top', 'b':'bottom');

/**
margin과 padding 생성을 위한 map입니다.
key는 class이름 생성시 쓰이며 value는 상세 속성 정의시 쓰입니다.
*/
$nameMap : ('m':'margin', 'p':'padding');
/**
실제 css class를 만들어주는 mixin입니다.
nameMap, position, size를 혼합하여 아래와 같은 형식으로 만들어줍니다.

ex>
m-0 : { margin : 0; }
mt-1 : { margin-top : 1px; }
*/
@mixin generate($nameMap : (), $position : (), $size : ()) {
  @each $preKey, $preValue in $nameMap {
      @each $px in $size {
          .#{$preKey}-#{$px} {
              #{$preValue} : getPx($px);
          }
          @each $sufKey, $sufValue in $position {
              .#{$preKey}#{$sufKey}-#{$px} {
                  #{$preValue}-#{$sufValue} : getPx($px);
              }
          }
      }
  }
}

@include generate($nameMap, $position, $size);

.ml-auto {
  margin-left: auto !important;
}

.mr-auto {
  margin-right: auto !important;
}